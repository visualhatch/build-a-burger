{"ast":null,"code":"import _classCallCheck from \"/Users/daveevans/Dropbox/Documents/WebsiteFiles/localhost/UDEMY Courses/REACT-complete-guide-PROJECT/burger-builder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daveevans/Dropbox/Documents/WebsiteFiles/localhost/UDEMY Courses/REACT-complete-guide-PROJECT/burger-builder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/daveevans/Dropbox/Documents/WebsiteFiles/localhost/UDEMY Courses/REACT-complete-guide-PROJECT/burger-builder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daveevans/Dropbox/Documents/WebsiteFiles/localhost/UDEMY Courses/REACT-complete-guide-PROJECT/burger-builder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/daveevans/Dropbox/Documents/WebsiteFiles/localhost/UDEMY Courses/REACT-complete-guide-PROJECT/burger-builder/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/daveevans/Dropbox/Documents/WebsiteFiles/localhost/UDEMY Courses/REACT-complete-guide-PROJECT/burger-builder/src/containers/Orders/Orders.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../Store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nvar Orders =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Orders, _Component);\n\n  function Orders() {\n    _classCallCheck(this, Orders);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Orders).apply(this, arguments));\n  }\n\n  _createClass(Orders, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onFetchOrders();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var orders = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n\n      if (!this.props.loading) {\n        orders = this.props.orders.map(function (order) {\n          return React.createElement(Order, {\n            key: order.id,\n            ingredients: order.ingredients,\n            price: order.price,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          });\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, orders);\n    }\n  }]);\n\n  return Orders;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onFetchOrders: function onFetchOrders() {\n      return dispatch(actions.fetchOrders());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["/Users/daveevans/Dropbox/Documents/WebsiteFiles/localhost/UDEMY Courses/REACT-complete-guide-PROJECT/burger-builder/src/containers/Orders/Orders.js"],"names":["React","Component","connect","Order","axios","withErrorHandler","actions","Spinner","Orders","props","onFetchOrders","orders","loading","map","order","id","ingredients","price","mapStateToProps","state","mapDispatchToProps","dispatch","fetchOrders"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,KAAP,MAAkB,8BAAlB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,gBAAP,MAA6B,6CAA7B;AAEA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AAEA,OAAOC,OAAP,MAAoB,qCAApB;;IAGMC,M;;;;;;;;;;;;;wCAEkB;AAChB,WAAKC,KAAL,CAAWC,aAAX;AACH;;;6BAEQ;AACL,UAAIC,MAAM,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb;;AACA,UAAI,CAAC,KAAKF,KAAL,CAAWG,OAAhB,EAAyB;AACrBD,QAAAA,MAAM,GAAG,KAAKF,KAAL,CAAWE,MAAX,CAAkBE,GAAlB,CAAsB,UAAAC,KAAK;AAAA,iBAChC,oBAAC,KAAD;AACI,YAAA,GAAG,EAAEA,KAAK,CAACC,EADf;AAEI,YAAA,WAAW,EAAED,KAAK,CAACE,WAFvB;AAGI,YAAA,KAAK,EAAEF,KAAK,CAACG,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADgC;AAAA,SAA3B,CAAT;AAMH;;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKN,MADL,CADJ;AAMH;;;;EAtBgBV,S;;AA2BrB,IAAMiB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHR,IAAAA,MAAM,EAAEQ,KAAK,CAACL,KAAN,CAAYH,MADjB;AAEHC,IAAAA,OAAO,EAAEO,KAAK,CAACL,KAAN,CAAYF;AAFlB,GAAP;AAIH,CALD;;AAQA,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACLX,IAAAA,aAAa,EAAE;AAAA,aAAMW,QAAQ,CAACf,OAAO,CAACgB,WAAR,EAAD,CAAd;AAAA;AADV,GAAP;AAGH,CAJD;;AAQA,eAAepB,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,gBAAgB,CAACG,MAAD,EAASJ,KAAT,CAA7D,CAAf","sourcesContent":["import React, {Component} from 'react';\n\nimport { connect } from 'react-redux';\n\nimport Order from '../../components/Order/Order';\n\nimport axios from '../../axios-orders';\n\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nimport * as actions from '../../Store/actions/index';\n\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\n\nclass Orders extends Component {\n\n    componentDidMount() {\n        this.props.onFetchOrders();\n    }\n\n    render() {\n        let orders = <Spinner/>;\n        if (!this.props.loading) {\n            orders = this.props.orders.map(order => (\n                <Order\n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={order.price}/>\n            ))\n        }\n        return (\n            <div>\n                {orders}\n            </div>\n        );\n\n    }\n}\n\n\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading\n    }\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      onFetchOrders: () => dispatch(actions.fetchOrders())\n    };\n};\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"]},"metadata":{},"sourceType":"module"}